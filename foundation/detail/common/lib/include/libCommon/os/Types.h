//Reference : Extract from Poco Types.h
// $Id: //poco/1.3/Foundation/include/Poco/Types.h#1 $
//
// Library: Foundation
// Package: Core
// Module:  Types
//
// Definitions of fixed-size integer types for various platforms
//
// Copyright (c) 2004-2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//

#ifndef __TYPES_20151127152350_1448609030_H__
#define __TYPES_20151127152350_1448609030_H__

#if !defined(__INCLUDE_TYPE_HEAD__20150828)
	#define __INCLUDE_TYPE_HEAD__20150828

	#if defined(_MSC_VER)
		//
		// Windows/Visual C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed __int64         int64_t;
		typedef unsigned __int64       uint64_t;
		#if defined(_WIN64)
			#define TYPES_ARCH_64_BIT	1
			typedef signed __int64     intptr_t;
			typedef unsigned __int64   uintptr_t;
		#else
			typedef __w64 int   intptr_t;
			typedef __w64 unsigned int uintptr_t;
		#endif
		#define TYPES_HAVE_INT64 1
	#elif defined(__GNUC__)
		//
		// Unix/GCC
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;

		#if defined(__LP64__)
			#define TYPES_ARCH_64_BIT 		1
			#define TYPES_LONG_IS_64_BIT	1
			typedef signed long        int64_t;
			typedef unsigned long      uint64_t;
			
			//#if !defined(__intptr_t_defined)
				typedef signed long            intptr_t;
				typedef unsigned long          uintptr_t;
			//#endif
		#else
			typedef signed long long   int64_t;
			typedef unsigned long long uint64_t;
			
			//#if !defined(__intptr_t_defined)
				typedef signed int            intptr_t;
				typedef unsigned int          uintptr_t;
			//#endif
		#endif
		#define TYPES_HAVE_INT64 1
	#elif defined(__DECCXX)
		//
		// Compaq C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed __int64         int64_t;
		typedef unsigned __int64       uint64_t;
		#if defined(__VMS)
			#if defined(__32BITS)
				typedef signed long    intptr_t;
				typedef unsigned long  uintptr_t;
			#else
				typedef signed __int64    intptr_t;
				typedef unsigned __int64  uintptr_t;
				#define TYPES_ARCH_64_BIT 	1
			#endif
		#else
			typedef signed long        intptr_t;
			typedef unsigned long      uintptr_t;
			#define TYPES_ARCH_64_BIT		1
			#define TYPES_LONG_IS_64_BIT 	1
		#endif
		#define TYPES_HAVE_INT64 1
	#elif defined(__HP_aCC)
		//
		// HP Ansi C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed long            intptr_t;
		typedef unsigned long          uintptr_t;
		#if defined(__LP64__)
			#define TYPES_ARCH_64_BIT 		1
			#define TYPES_LONG_IS_64_BIT 	1
			typedef signed long        int64_t;
			typedef unsigned long      uint64_t;
		#else
			typedef signed long long   int64_t;
			typedef unsigned long long uint64_t;
		#endif
		#define TYPES_HAVE_INT64 1
	#elif defined(__SUNPRO_CC)
		//
		// SUN Forte C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed long            intptr_t;
		typedef unsigned long          uintptr_t;
		#if defined(__sparcv9)
			#define TYPES_ARCH_64_BIT		1
			#define TYPES_LONG_IS_64_BIT 	1
			typedef signed long        int64_t;
			typedef unsigned long      uint64_t;
		#else
			typedef signed long long   int64_t;
			typedef unsigned long long uint64_t;
		#endif
		#define TYPES_HAVE_INT64 	1
	#elif defined(__IBMCPP__) 
		//
		// IBM XL C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed long            intptr_t;
		typedef unsigned long          uintptr_t;
		#if defined(__64BIT__)
			#define TYPES_ARCH_64_BIT 		1
			#define TYPES_LONG_IS_64_BIT 	1
			typedef signed long        int64_t;
			typedef unsigned long      uint64_t;
		#else
			typedef signed long long   int64_t;
			typedef unsigned long long uint64_t;
		#endif
		#define TYPES_HAVE_INT64 1
	#elif defined(__sgi) 
		//
		// MIPSpro C++
		//
		typedef signed char            int8_t;
		typedef unsigned char          uint8_t;
		typedef signed short           int16_t;
		typedef unsigned short         uint16_t;
		typedef signed int             int32_t;
		typedef unsigned int           uint32_t;
		typedef signed long            intptr_t;
		typedef unsigned long          uintptr_t;
		#if _MIPS_SZLONG == 64
			#define TYPES_ARCH_64_BIT 		1
			#define TYPES_LONG_IS_64_BIT 	1
			typedef signed long        int64_t;
			typedef unsigned long      uint64_t;
		#else
			typedef signed long long   int64_t;
			typedef unsigned long long uint64_t;
		#endif
		#define TYPES_HAVE_INT64 1
	#endif

	typedef	int8_t		Int8;
	typedef	uint8_t		UInt8;
	typedef	int16_t		Int16;
	typedef	uint16_t	UInt16;
	typedef	int32_t		Int32;
	typedef	uint32_t	UInt32;
	typedef	int64_t		Int64;
	typedef	uint64_t	UInt64;
	typedef	intptr_t	IntPtr;
	typedef	uintptr_t	UIntPtr;
	typedef	Int64		THandle;

	#if defined(_WIN32) 
		#if defined(_DLL_)
			#if defined(_EXPORTS_)
				#define _SYMBOL_DLL_API __declspec(dllexport)
			#else
				#define _SYMBOL_DLL_API __declspec(dllimport)	
			#endif
			#define _SYMBOL_DLL_EXPORTS __declspec(dllexport)
			#define _SYMBOL_DLL_IMPORT __declspec(dllimport)
		#endif
		#define	_CALLTYPE	__stdcall
	#else
		#define	_CALLTYPE
	#endif

	#if !defined(_SYMBOL_DLL_API)
		#define _SYMBOL_DLL_API
		#define _SYMBOL_DLL_EXPORTS
		#define _SYMBOL_DLL_IMPORT
	#endif

	#define EXTERN_C    extern "C"

	#define _OUT	
	#define _IN

#endif //__INCLUDE_TYPE_HEAD__20150828

#endif // __CUSTOM_TYPES_HEAD_DEF__
